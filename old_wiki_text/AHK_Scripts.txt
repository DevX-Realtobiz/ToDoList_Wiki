 
AHK_Scripts 
Page history last edited by Jochen 3 years, 7 months ago 
(No guarantees are provided; use the scripts at your own risk.)
Scripts in alphabetical order:
 
Paste Task above/before Selected Task
(TCP_JM)
 
After a task has been cut out or copied ToDoList offers two options: 'Paste as Subtask of Selected Task' and 
'Paste after Selected Task'.
This AHK script offers the third alternative: Paste Task above/before Selected Task 
The script works on all "levels" (with parent tasks and subtasks; even with the first subtask after a parent task). The 
shortcut ^!v (= Ctrl, Alt + v) was chosen, because it fits to the other two paste commands(Ctrl+v and Ctrl+Shift+v).
 
^!v::
; pastes a task from the clipboard before a selected task
SetTitleMatchMode, 2
WinActivate, AbstractSpoon
WinWaitActive, AbstractSpoon
SendInput, {CTRLdown}v{CTRLup}
SendInput, {CTRLdown}{up}{CTRLup}
return
 
MODIFICATION (capital H)
This modification (below) makes sure that the shortkey works if and only if the ToDoList window is active.
 
SetTitleMatchMode,2 ;partial matching
#Ifwinactive, AbstractSpoon ;only activate hotkey if TDL us active
^!v::
; pastes a task from the clipboard before a selected task
SendInput, {CTRLdown}v{CTRLup}
SendInput, {CTRLdown}{up}{CTRLup}
return
#Ifwinactive
 
Replace email adresses like 'user@email.com' automatically with 
mailto:user@email.com in the Comments field'. 
(capital H)
 
This script works with ToDoList version 6.2.6 (and higher) and the 6.3.xx Versions: 
 
In ToDoList the URL detection in the 'Comments field' is written to look for specific URL types (eg. http://, mailto:, 
ftp://, ...) 
As a result of that an email address like 'user@email.com' will not be recognized by ToDoList and formated as an 
link. 
 
Description: 
By default the script code checks every second if ToDoList is active, and if it is active, searches the comment field 
for email addresses (like 'user@email.com') and replaces them with mailto: email addresses (e.g. 
mailto:user@email.com). The script works even if you have a huge comment field (and the scan takes therefore 
more than a second) or a slow computer.
 
#persistent 
settitlematchmode,2 
  
Settimer, SeekEmail,1000 ;frequency - change as you see fit. 
; Settimer, SeekEmail,3000" may be more appropriate on slow computers/large comment blocks 
 
return 
  
SeekEmail: 
IfWinActive AbstractSpoon ;only for TDL windows 
{ 
WinGet, ControlList , ControlList  ;gets a list of all controls 
  
Loop, Parse, ControlList, `n 
{ 
if instr(A_LoopField,"RICHEDIT")  ;we want a control with richedit in it (usually of the form RICHEDIT50WX 
where X is a number 
    { 
    CommentControl:=A_LoopField 
    ControlGet, isVisible, Visible, , %CommentControl%  ;is the control visible or not? 
    if isVisible=0 
        CommentControl= 
    else 
        break            ;stops if the control is visible 
    } 
} 
StringReplace, CommentControl, CommentControl, `n  ;clean 
StringReplace, CommentControl, CommentControl, `r 
StatusBarGetText, StatusBar , 4, AbstractSpoon 
ControlGetText, Comment , %CommentControl%, AbstractSpoon   
CommentLen:=strLen(Comment) 
if (statusbar=OldStatusBar) and (CommentLen=OldCommentLen) ;only performs its magic if statusbar part 4 
changed, or Comment Length changed 
    Return 
Settimer, SeekEmail, Off    ;turn of timer, just in case scan is very slow e.g. long comment field, with lots of 
email addresses 
OldStatusBar:=StatusBar 
OldCommentLen:=CommentLen 
  
;NeedleRegEx:="i)\w+[\+\.\w-]*@([\w-]+\.)*\w+[\w-]*\.([a-z]{2,4}|\d+)"   ;simpler version checking for email 
NeedleRegEx:="i)[a-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[a-z0-9!#$%&'*+/=?^_`{|}~-]+)*@(?:[a-z0-9](?:[a-z0-9-]*[a-
z0-9])?\.)+(?:[A-
Z]{2}|com|org|net|edu|gov|mil|biz|info|mobi|name|aero|asia|jobs|museum|cat|coop|info|int|pro|tel|travel|xxx)\b" 
start=1 
pos := RegExMatch(Comment, NeedleRegEx , email,1)  ;search for email address 
  
while(pos>0) 
{ 
check= 
if pos>7 
  Check:=SubStr(Comment, pos-7,7) 
start:=pos+strLen(email) 
if check<>mailto: ;a better way may be to check for newline/space/tab 
{ 
Comment:=SubStr(Comment, 1 , pos-1) . "mailto:" . SubStr(Comment, pos) ;replace 
start:=pos+strLen(email)+7 ;+7 for the insertion of mailto: 
} 
pos := RegExMatch(Comment, NeedleRegEx , email,start) ; search next occurence 
} 
  
ControlSetText,  %CommentControl%, %Comment%,  AbstractSpoon 
} 
Settimer, SeekEmail, On ;restore time 
Return
 
Scripts to address the views in ToDoList directly
 (TCP_JM)
 
Many thanks to 'capital H', who pointed me in the right direction and helped to improve the script with regard to content and 
the visual appearance.
 
ToDoList offers two options to change the view (respectively to put the focus on TaskTreeView, ListView or 
Comments): 
With {F10} and {F11} you can toggle between the views. 
With these 4 scripts you can address the views directly.The scripts are meant as an addition to the 2 options 
Toggle.
(You'll find some informations about the scripts below the code).
 
; Script 1  activates TASK TREE VIEW or stays there
SetTitleMatchMode 2
#IfWinActive, AbstractSpoon
+F10::
StatusBarGetText, StatusBar , 8, AbstractSpoon
if StatusBar = Tasks: Comments
 {
 PostMessage, 0x111, 33243,,, AbstractSpoon
 StatusBarGetText, StatusBar , 8, AbstractSpoon
 if StatusBar = List View
 PostMessage, 0x111, 33238,,, AbstractSpoon
 }
if StatusBar = Tasks: List View
 PostMessage, 0x111, 33238,,, AbstractSpoon
return
#IfWinActive
 
 
; Script 2 - activates LIST VIEW or stays there
SetTitleMatchMode 2
#IfWinActive, AbstractSpoon
+F11::
StatusBarGetText, StatusBar , 8, AbstractSpoon
if StatusBar = Tasks: Comments
 {
 PostMessage, 0x111, 33243,,, AbstractSpoon
 StatusBarGetText, StatusBar , 8, AbstractSpoon
 if StatusBar = Task Tree
 PostMessage, 0x111, 33238,,, AbstractSpoon
 }
if StatusBar = Tasks: Task Tree
 PostMessage, 0x111, 33238,,, AbstractSpoon
return
#IfWinActive
 
 
; Script 3 - activates Comments field or stays there
SetTitleMatchMode 2
#IfWinActive, AbstractSpoon
+F9::
StatusBarGetText, StatusBar , 8, AbstractSpoon
if (StatusBar = "Tasks: Task Tree") or (StatusBar = "Tasks: List View")
 PostMessage, 0x111, 33243,,, AbstractSpoon
return
#IfWinActive
 
 
; Script 4 - activates Comments field or stays there and maximizes the comments field resp. minimizes it again
; (and in this case sets the focus back to ListView or TaskTreeView)
SetTitleMatchMode 2
#IfWinActive, AbstractSpoon
^F9::
StatusBarGetText, StatusBar , 8, AbstractSpoon
if (StatusBar = "Tasks: Task Tree") or (StatusBar = "Tasks: List View")
 PostMessage, 0x111, 33243,,, AbstractSpoon
SendMessage, 0x111, 33258,,, AbstractSpoon ; maximizes the comments resp. minimizes the comments
PostMessage, 0x111, 33243,,, AbstractSpoon
; This last command puts the focus back to TTV or LV. If you dislike this disable it with ; or delete it.
; Im using script 4 if Im working in TTV or LV and want to go directly to a maximized CF and back
; to the task list. Ctrl+Shift+m doesnt put the cursor back in the task list.
return
#IfWinActive
 
Informations:
* The 4 scripts work whether you choose to see the StatusBar or not (menu: View / Show Status Bar). 
* The shortcuts/hotkeys can easily be changed but you shouldnt use {F10} or {F11} without [Shift], [Ctrl], [Alt] 
or [Win] as a hotkey unless you want to kill the implemented ToDoList Toggle options. BTW: {Shift}+{F10} 
(without using this hotkey for script 1) usually opens context menus. I do not need that. But if you do you can 
easily change the hotkey(s). 
* Put the 4 little scripts in your "alwayson" script (=a script that gets launched with or before ToDoList and 
runs all day long) 
* foolish assumption: you want to use the scripts while working with ToDoList 
* the 4 scripts do not depend on each other. 
* Dan pointed out that that the scripts will need changing if TDL is localized (thanks Dan!). 
The reason is that the script queries information that is shown in the 'Status Bar'. 
If these informations in the 'Status Bar' are not shown in English, because ToDoList has been translated into 
another language the scripts won't work without modification. 
To change the scripts look for 'if StatusBar =' in the text of the script. 
In the English version you see 'Tasks: Task Tree', 'Tasks: Comments', 'Tasks: List View' or just 'Task Tree', 
'Comments', 'List View'. This refers to what the 'Status Bar' of ToDoList shows. 
To change the scripts you just have to change 'Tasks: Task Tree' etc. to the text that your 'Status Bar' shows. 
That's all!
 
 
Set the due date and clear the due date respectivly 
 
The following example map F6 and Shift F6 to set the due date and clear the due date respectively.
 
; set due date time
!F6::
SetTitleMatchMode, 2
WinActivate, AbstractSpoon
WinWaitActive, AbstractSpoon
Send {F2 2}{Escape}
Send {Alt down}u{Alt up}{Tab}
Send {Alt down}{Down}{Alt up}
return
; clear due date
+F6::
Send {Enter}
SetTitleMatchMode, 2
WinActivate, AbstractSpoon
WinWaitActive, AbstractSpoon
Send {F2 2}{Escape}
Send {Alt down}u{Alt up}{Space}{Enter}
return
 
 

 

Navigator
 
Loading
 



Recent 
Activity
 

Loading
 

 
