3rd Party Tools:
(from forum mentions)
* generally only free tools are listed, the non-free ones often being prohibitively expensive for the average person.
 
- Misc. Hints:
* the -g todolist.exe command line parameter will cause any transform generated temporary tasklists to be saved to your Temp folder so that you can inspect them. (%temp%\ToDoList.intermediate.txt)
* } I've hacked a few useful ones together. The fastest way to test, as far as I found, was to take a copy of the xml tdl file, and add a style sheet directive to the top
} section, then open it in internet explorer and simply refresh the "page" whenever you make a modification to the stylesheet. Makes debugging/change-assessment much faster.
} for example, place this after the #?xml version ?#:
} <?xml:stylesheet type="text/xsl" href="/ProjectCheckList.xsl"?>
o NOTE: This may not immediately work from Chrome. Use Chrome's '--allow-file-access-from-files parameter' to avoid "Unsafe attempt to load URL file:///C:/xsl-rpg/style.xsl from frame with URL file:///C:/xsl-rpg/data.xml. Domains, protocols and ports must match.".
o Can chrome be made to perform an xsl transform on a local file
* The equivalent for pulling in the schema would be:
o <?xml version="1.0" encoding="UTF-16"?> (normal first line)
o <?xml-stylesheet type="text/xsl" href="/./Resources/Stylesheets/mystylesheet.xsl"?> (inserted 2nd line, as above, changed for your own particular file path)
o <TODOLIST xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" PROJECTNAME="Sample Tasklist" FILEFORMAT="9" EARLIESTDUEDATE="0.00000000" NEXTUNIQUEID="26" FILENAME="Introduction.tdl" FILEVERSION="96" APPVER="6.8.0.0" xsi:noNamespaceSchemaLocation="./Resources/Misc/todolist_schema.xsd"> (added 3rd line, changed for your own particular file path)
o - the 3rd line special bits to add in being 'xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="./Resources/Misc/todolist_schema.xsd"'
 
 
- msxsl from Microsoft, XSL transformation as a user-defined tool
* "The msxsl.exe command line utility enables you to perform command line Extensible Stylesheet Language (XSL) transformations using the Microsoft XSL processor."
* Note, this is msx*S*l, not msx*M*l, a different beastie. See XSLT on Wikipedia. (Transforming .xml files into other files, such as .html, .pdf, other .xml, etc.)
* * From this Wikipedia article:
o libxslt is a free library released under the MIT License that can be reused in commercial applications. It is based on libxml and implemented in C for speed and portability.
o It can be used at the command line via xsltproc which is included in OS X and many Linux distributions, and can be used on Windows via Cygwin.
o The WebKit layout engine, used for example in the Safari and Chrome web browsers, uses the libxslt library to do XSL transformations.
o See 'XSLT Examples' in this article for an overview as to what these XML beasties are all about.
* From Re: HTML vs. XSL sburr 25-Jan-05 13:36:
 If you use a command line XSL engine like MSXSL.EXE (free from Microsoft) then you can setup a ToDoList custom tool to perform the transformation. For MSXSL, the basic command line format is

msxsl source stylesheet -o destination
 
So you could define your custom tool as

msxsl "$(pathname)" your-stylesheet.xsl -o "$(filetitle).html"

Of course, you could also use user-provided variables for any or all of the 3 parameters instead.
 
- XML Notepad, "XML Notepad 2007 provides a simple intuitive User Interface for browsing and editing XML documents."
* Sadly, not what we're looking for, at least for stylesheet maintenance, see post.
 
- (Microsoft's) Visual Studio - a full developer IDE that hints to have capabilities in this (XML/XSL/XSD/XMLT) area.
* it is not yet known (people reporting back their experiences) if the free (Express?) versions include the looked for functionality.
* http://www.codeproject.com/Messages/4717164/Re-Any-xmlnotepad-users-How-to-get-going.aspx
* Editing XSLT Style Sheets
* How to: Execute an XSLT Transformation from the XML Editor
* Debugging XSLT
 
 
- NetBeans IDE
* Load an XML, e.g. Introduction.tdl, into the editor, right-click / choose transform, point to a stylesheet (.xsl file), choose preview in browser, and voila.
- this is a coder's editing solution, not a GUI / graphical data base report writer. Viable if one is comfortable with, and only looking for, that.
- broken at the moment, 7.0.1 sees two binary characters at the beginning of the .tdl file. (Encoding issue?) 7.4 does not, but injects a META tag in the 2nd output line - failing to terminate the line with /> instead of >, and the browser falls over.
 
 
- iReport Designer,  "iReport is the free, open source report designer for JasperReports and JasperReports Server. Create very sophisticated layouts containing charts, images, subreports, crosstabs and much more. Access your data through JDBC, TableModels, JavaBeans, XML, Hibernate, CSV, and custom sources. Then publish your reports as PDF, RTF, XML, XLS, CSV, HTML, XHTML, text, DOCX, or OpenOffice."
* Please note, it is not clear how long iReport will be available, apparently being superseded by Jaspersoft Studio: "iReport/Jaspersoft Studio Support Announcement: As of version 5.5.0, Jaspersoft Studio will be the official design client for JasperReports. iReport will remain as a supported product in maintenance-only mode until December 31, 2015, meaning we will continue to fix critical defects in upcoming releases but no new features will be added to the iReport client. Continue to maintain your existing reports with the new Jaspersoft Studio!"
* Suitability for use with TDL has been asked, see Is iReport the tool to use for developing stylesheets for AbstractSpoon's ToDoList?
* Looks to be the GUI solution desired, if one desires such. Learning curve issue at the moment in that having selected an XML (.tdl) file, the available fields are not being listed - it is unclear at the moment as to how to attach the schema (.xsd file under Resources/Misc) to the environment. See Stylesheet Development pulling in files
 
 
- Programmer's Notepad
* Not obviously more than a code editor. See XML transform tool.
 
- XMLmind XML Editor, "XMLmind XML Editor is a strictly validating, near WYSIWYG, DocBook editor, DITA editor, MathML editor, XHTML editor, XML editor. Because XMLmind XML Editor is highly extensible, it may be also be used to create documents conforming to your own custom schema."
* 250 per user, 1 - 4 units. (Price list.)
 
- Xtrans, "A compact editor for building XSL templates and testing their transformation with XML documents. Very easy to use. No setup required, excellent tool for XSL authoring and debugging."
* point at an .xsl, point at an xml (.tdl), click transform - voila, html result. Sadly, raw .html.
o Arguably, the code editor and browser open methodology shown above with the xml:stylesheet line is easier, faster.
* BUT - Xtrans seems to have a great deal of X{stuff} awareness not present elsewhere.
o Didn't see css references though (did see  XML construction, XSL tag, namespaces, html, etc. references) - which may well be of prime usefulness for a stylesheet newbie author. (Like myself.)
* Will definitely take you where you want to go, some will find entirely suitable. 
 
- XMLCooktop,
* Cooktop - The free XML editor for Windows
* What is it?
- Cooktop is an editor and development environment for XML, DTD, and XSLT documents
- Cooktop is a Windows application
- Best of all, it's free!
* Very much like Xtrans above.
- point at an .xsl, point at an xml (.tdl), click transform - voila, html result. BOTH raw and formatted .html
- Arguably, the code editor and browser open methodology shown above with the xml:stylesheet line is easier, faster.
-- although possibly not, that argument presumes familiarity with coding these sorts of things. 
- BUT - Xtrans seems to have a great deal of X{stuff} awareness not present elsewhere.
o Didn't see css references though (did see  XML construction, XSL tag, namespaces, html, etc. references) - which may well be of prime usefulness for a stylesheet newbie author. (Like myself.)
* - XMLCooktop, or just 'Cooktop' does have css references. 
* Definitely a GUI created in an older time. Quite usable, but clearly ... pass?nbsp;
* Will definitely take you where you want to go, some will find entirely suitable. Some will likely prefer over Xtrans, but it does seem like choosing between the two will come down to personal preference.
* e.g. Go to 'xpath console' tab, press Ctrl-1 - up comes a drop down list of valid Xpath's. 
 
- XML:Wrench, "The simple XML Editor" "XML:Wrench is the easy to use tool for editing XML and related files. It can also be used as an HTML editor, a CSS Editor, an XSL style-sheet editor, a DTD editor and many more."
* Much like Xtrans and XMLCooktop above. 
* point at an .xml, click transform, point at the stylesheet (.xsl), choose html output, and voila. Sadly, raw .html. Click 'preview 1' and it opens up in a browser for you.
* Lacks the auto- code formatting (tidy) of these other two - most will likely prefer one of the other two instead.
* Will definitely take you where you want to go, some will find entirely suitable. 
 
- XML Copy Editor, "XML Copy Editor is a fast, free, validating XML editor."
* Cross-platform, Linux version in repositories. (Don't run as root - app windows will just disappear on you.)
- Attempt to load .tdl under Kubuntu 12.04 LTS caused the app window to just disappear. App broken, presumably.
* load a .tdl file, associate the stylesheet (.xsl) and schema (.xsd) and it magically / nicely inserts the appropriate lines in the .tdl. 2nd line stylesheet, 3rd line ("<TODOLIST") gets schema attributes added. 
* This is the only app I've found so far that lets one easily associate the schema! (So one can pick fields out of a list?)
* The GUI is of an even older style than Xtrans or XMLCooktop - the others also add formatting / tidy, which will be of interest to some.
* Probably worth having in your kit bag, if only as a sanity check. 
* Sadly, at running of transform an error immediately results, "Cannot transform: Error at line 1, column 1: Start tag expected, '<' not found"
- Hopefully others more expert than I can resolve / comment. Search the forums.
 
 
- Online XSLT Editor at w3schools.com, "With our online editor, you can edit the XML and the XSL source code, and click on a button to view the result." 
3rd Party Tools Navigator
 
Loading
 
SideBar
 
 
Recent Activity
 
Show 0 new items 
Loading
 
 
